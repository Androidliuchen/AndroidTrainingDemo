模板方法模式的实现要素：
准备一个抽象类，将部分逻辑以具体方法的形式实现，然后声明一些抽象方法教给由子类实现剩余逻辑，用钩子方法给予子类更大的灵活性。最后将方法汇总构成一个不可变的模板方法。
1.抽象基类
a.基本的实现方法 （private，通用的方法）
b.抽象方法 (使用protected（或默认）, 延迟到子类实现)
c.可选的钩子方法   Hook, 钩子函数，提供一个默认或空的实现，具体的子类可以自行决定是否挂钩以及如何挂钩
d.Template方法（final,防止被子类复写，遵循好莱坞原则）

2.具体子类
a.实现基类中的抽象方法
b.覆盖钩子方法


适用场景：
1.算法或操作遵循相似的逻辑
2.重构是（把相同的代码抽取到父类中）
3.重要、复杂的算法，核心算法设计为模板算法

优点：
封装性好、复用性好、屏蔽细节、便于维护

缺点：
单继承